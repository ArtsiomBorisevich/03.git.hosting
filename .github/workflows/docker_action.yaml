name: ci. project

on:
  push:
    branches:
      - "dev"

jobs:
  docker:
    env:
        USER: ${{ github.actor }}
        IMAGE: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test if image has not root access inside
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Install curl
        run: sudo apt update && sudo apt install -y curl
        
      - name: Check data and no-root inside
        id: info
        run: |
            docker build --network=host -t spring:1.0.0 .
            docker run -d --name spring -p 8080:8080 -t spring:1.0.0
            docker images
            sleep 5
            docker ps
            docker exec -it spring su -
            ISROOT=$(docker exec -it spring whoami)&& echo "::set-output name=ISROOT::$ISROOT"
            curl --request GET --url http://localhost:8080 >> report.txt
            echo $ISROOT >> report.txt
            
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          path: report.txt  
          
      - name: Slack Notification
        if: (steps.info.outputs.ISROOT == "appuser")
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: appuser
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket:'
          SLACK_TITLE: 'OH MY GOD USER IS ROOT!'
          SLACK_USERNAME: Artiom Borisevich
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
